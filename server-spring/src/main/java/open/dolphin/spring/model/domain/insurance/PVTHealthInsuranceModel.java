package open.dolphin.spring.model.domain.insurance;

import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.EqualsAndHashCode;

import java.util.List;
import open.dolphin.spring.model.core.InfoModel;

/**
 * Health-Insurance class to be parsed.
 *
 * @author Kazushi Minagawa, Digital Globe, Inc.
 *
 *         Modified by Mirror-I corp for adding 'PvtPublicInsuranceItem' and
 *         related function to store/get PvtPublicInsuranceItem name
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@EqualsAndHashCode(callSuper = true)
public class PVTHealthInsuranceModel extends InfoModel {

    // ORCA 受付時に送信される UUID
    private String uuid;

    // 保険種別
    private String insuranceClass;

    // 保険種別コード
    private String insuranceClassCode;

    // 保険種別コード体系
    private String insuranceClassCodeSys;

    // 保険者番号
    private String insuranceNumber;

    // 被保険者記号
    private String clientGroup;

    // 被保険者番号
    private String clientNumber;

    // 本人家族区分
    private String familyClass;

    // 開始日(交付年月日）
    private String startDate;

    // 有効期限
    private String expiredDate;

    // 継続疾患名
    private String[] continuedDisease;

    // 入院時負担率
    private String payInRatio;

    // 外来時負担率
    private String payOutRatio;

    // 公費負担リスト
    private PVTPublicInsuranceItemModel[] pvtPublicInsuranceItem;

    // 公費負担リスト
    private List<PVTPublicInsuranceItemModel> publicItems;

    // Business logic methods that should not be generated by Lombok
    public String getGUID() {
        return uuid;
    }

    public void setGUID(String val) {
        uuid = val;
    }

    public String getInsuranceCodeAndClass() {
        StringBuilder sb = new StringBuilder();
        if (insuranceClassCode != null) {
            sb.append(insuranceClassCode).append(" ");
        }
        if (insuranceClass != null) {
            sb.append(insuranceClass);
        } else {
            sb.append("記載無");
        }
        return sb.toString();
    }

    public void addContinuedDisease(String val) {
        int len = 0;
        if (continuedDisease == null) {
            continuedDisease = new String[1];
        } else {
            len = continuedDisease.length;
            String[] dest = new String[len + 1];
            System.arraycopy(continuedDisease, 0, dest, 0, len);
            continuedDisease = dest;
        }
        continuedDisease[len] = val;
    }

    public void addPvtPublicInsuranceItem(PVTPublicInsuranceItemModel value) {
        if (pvtPublicInsuranceItem == null) {
            pvtPublicInsuranceItem = new PVTPublicInsuranceItemModel[1];
            pvtPublicInsuranceItem[0] = value;
            return;
        }
        int len = pvtPublicInsuranceItem.length;
        PVTPublicInsuranceItemModel[] dest = new PVTPublicInsuranceItemModel[len + 1];
        System.arraycopy(pvtPublicInsuranceItem, 0, dest, 0, len);
        pvtPublicInsuranceItem = dest;
        pvtPublicInsuranceItem[len] = value;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        if (insuranceClassCode != null) {
            sb.append(insuranceClassCode).append(" ");
        }
        if (insuranceClass != null) {
            sb.append(insuranceClass);
        } else {
            sb.append("記載無");
        }
        if (pvtPublicInsuranceItem != null) {
            for (PVTPublicInsuranceItemModel pm : pvtPublicInsuranceItem) {
                sb.append(":");
                sb.append(pm.toString());
            }
        }
        return sb.toString();
    }

    public String toClaim() {
        StringBuilder sb = new StringBuilder();
        sb.append("<mmlHi:HealthInsuranceModule mmlHi:countryType=\"JPN\">");

        if (getInsuranceClass() != null && getInsuranceClassCode() != null) {
            sb.append("<mmlHi:insuranceClass mmlHi:ClassCode=");
            sb.append(addQuote(getInsuranceClassCode()));
            sb.append(" mmlHi:tableId=\"MML0031\">");
            sb.append(getInsuranceClass());
            sb.append("</mmlHi:insuranceClass>");
        }

        sb.append("<mmlHi:insuranceNumber>");
        sb.append(getInsuranceNumber());
        sb.append("</mmlHi:insuranceNumber>");

        sb.append("<mmlHi:clientId>");
        sb.append("<mmlHi:group>");
        sb.append(getClientGroup());
        sb.append("</mmlHi:group>");
        sb.append("<mmlHi:number>");
        sb.append(getClientNumber());
        sb.append("</mmlHi:number>");
        sb.append("</mmlHi:clientId>");

        sb.append("<mmlHi:familyClass>");
        sb.append(getFamilyClass());
        sb.append("</mmlHi:familyClass>");

        sb.append("<mmlHi:startDate>");
        sb.append(getStartDate());
        sb.append("</mmlHi:startDate>");

        sb.append("<mmlHi:expiredDate>");
        sb.append(getExpiredDate());
        sb.append("</mmlHi:expiredDate>");

        if (getPayInRatio() != null) {
            sb.append("<mmlHi:paymentInRatio>");
            sb.append(getPayInRatio());
            sb.append("</mmlHi:paymentInRatio>");
        }

        if (getPayOutRatio() != null) {
            sb.append("<mmlHi:paymentOutRatio>");
            sb.append(getPayOutRatio());
            sb.append("</mmlHi:paymentOutRatio>");
        }

        if (pvtPublicInsuranceItem != null && pvtPublicInsuranceItem.length > 0) {
            sb.append("<mmlHi:publicInsurance>");
            for (PVTPublicInsuranceItemModel pi : pvtPublicInsuranceItem) {
                sb.append(pi.toClaim());
            }
            sb.append("</mmlHi:publicInsurance>");
        }

        sb.append("</mmlHi:HealthInsuranceModule>");
        return sb.toString();
    }

    private String addQuote(String str) {
        StringBuilder sb = new StringBuilder();
        sb.append("\"");
        sb.append(str);
        sb.append("\"");
        return sb.toString();
    }
}
